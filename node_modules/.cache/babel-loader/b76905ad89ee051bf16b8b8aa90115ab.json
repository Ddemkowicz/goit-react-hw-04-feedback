{"ast":null,"code":"var _jsxFileName = \"E:\\\\MODU\\u0141-REACT-zadania\\\\hw-2\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\FeedbackOptions\\\\FeedbackOptions.jsx\";\n// import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport css from './FeedbackOptions.module.css';\nimport Section from 'components/Section/Section';\nimport Statistics from 'components/Statistics/Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class FeedbackOptions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      showFeedbackStatistics: true,\n      positive: 0\n    };\n\n    this.handleButtonClick = option => {\n      this.setState(prevState => ({\n        [option]: prevState[option] + 1,\n        showFeedbackStatistics: true\n      }));\n    };\n\n    this.handleHideStatistics = () => {\n      this.setState({\n        showFeedbackStatistics: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad,\n      showFeedbackStatistics\n    } = this.state;\n    const total = good + neutral + bad;\n    const positive = total > 0 ? good / total * 100 : 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.button,\n          type: \"button\",\n          onClick: () => this.handleButtonClick('good'),\n          children: \"Good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.button,\n          type: \"button\",\n          onClick: () => this.handleButtonClick('neutral'),\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.button,\n          type: \"button\",\n          onClick: () => this.handleButtonClick('bad'),\n          children: \"Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), showFeedbackStatistics && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Section, {\n          title: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positive: positive.toFixed(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["E:/MODUŁ-REACT-zadania/hw-2/goit-react-hw-02-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx"],"names":["React","Component","css","Section","Statistics","FeedbackOptions","state","good","neutral","bad","showFeedbackStatistics","positive","handleButtonClick","option","setState","prevState","handleHideStatistics","render","total","button","toFixed"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;;AAEA,eAAe,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACrDK,KADqD,GAC7C;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE,CAHC;AAINC,MAAAA,sBAAsB,EAAE,IAJlB;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KAD6C;;AAAA,SASrDC,iBATqD,GASjCC,MAAM,IAAI;AAC5B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACF,MAAD,GAAUE,SAAS,CAACF,MAAD,CAAT,GAAoB,CADJ;AAE1BH,QAAAA,sBAAsB,EAAE;AAFE,OAAL,CAAvB;AAID,KAdoD;;AAAA,SAgBrDM,oBAhBqD,GAgB9B,MAAM;AAC3B,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,sBAAsB,EAAE;AAA1B,OAAd;AACD,KAlBoD;AAAA;;AAoBrDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA;AAAtB,QAAiD,KAAKJ,KAA5D;AACA,UAAMY,KAAK,GAAGX,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,UAAME,QAAQ,GAAGO,KAAK,GAAG,CAAR,GAAaX,IAAI,GAAGW,KAAR,GAAiB,GAA7B,GAAmC,CAApD;AAEA,wBACE;AAAA,8BACE;AAAA,gCACE;AACE,UAAA,SAAS,EAAEhB,GAAG,CAACiB,MADjB;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKP,iBAAL,CAAuB,MAAvB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,SAAS,EAAEV,GAAG,CAACiB,MADjB;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKP,iBAAL,CAAuB,SAAvB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AACE,UAAA,SAAS,EAAEV,GAAG,CAACiB,MADjB;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAE,MAAM,KAAKP,iBAAL,CAAuB,KAAvB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAwBGF,sBAAsB,iBACrB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAES,KAJT;AAKE,UAAA,QAAQ,EAAEP,QAAQ,CAACS,OAAT,CAAiB,CAAjB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA,oBADF;AAuCD;;AAhEoD","sourcesContent":["// import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport css from './FeedbackOptions.module.css';\r\nimport Section from 'components/Section/Section';\r\nimport Statistics from 'components/Statistics/Statistics';\r\n\r\nexport default class FeedbackOptions extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    showFeedbackStatistics: true,\r\n    positive: 0,\r\n  };\r\n\r\n  handleButtonClick = option => {\r\n    this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n      showFeedbackStatistics: true,\r\n    }));\r\n  };\r\n\r\n  handleHideStatistics = () => {\r\n    this.setState({ showFeedbackStatistics: false });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad, showFeedbackStatistics } = this.state;\r\n    const total = good + neutral + bad;\r\n    const positive = total > 0 ? (good / total) * 100 : 0;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <button\r\n            className={css.button}\r\n            type=\"button\"\r\n            onClick={() => this.handleButtonClick('good')}\r\n          >\r\n            Good\r\n          </button>\r\n          <button\r\n            className={css.button}\r\n            type=\"button\"\r\n            onClick={() => this.handleButtonClick('neutral')}\r\n          >\r\n            Neutral\r\n          </button>\r\n          <button\r\n            className={css.button}\r\n            type=\"button\"\r\n            onClick={() => this.handleButtonClick('bad')}\r\n          >\r\n            Bad\r\n          </button>\r\n        </div>\r\n        {showFeedbackStatistics && (\r\n          <div>\r\n            <Section title=\"Statistics\" />\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positive={positive.toFixed(0)}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}